1
00:00:00,000 --> 00:00:02,504
Okay. So now that we've talked about Airflow,

2
00:00:02,504 --> 00:00:03,825
we've had a couple of quizzes,

3
00:00:03,825 --> 00:00:06,630
I thought it'd be fun to jump into our first demonstration.

4
00:00:06,629 --> 00:00:14,129
So, I'm going to move over to coding window here and show you our first demonstration.

5
00:00:14,130 --> 00:00:17,100
So, this is a DAG.

6
00:00:17,100 --> 00:00:20,320
I'm going to zoom in here so this is a little easier to see.

7
00:00:22,100 --> 00:00:24,660
This is our first DAG.

8
00:00:24,660 --> 00:00:28,855
What you can see here is on line 12,

9
00:00:28,855 --> 00:00:31,925
we have the definition of our DAG,

10
00:00:31,925 --> 00:00:39,960
and we're instantiating the DAG which was imported from airflow on line four.

11
00:00:40,030 --> 00:00:43,774
There are two components that every DAG must have.

12
00:00:43,774 --> 00:00:45,890
The first one is a name.

13
00:00:45,890 --> 00:00:50,780
So, we're naming our DAG "lesson1.demo1."

14
00:00:50,780 --> 00:00:54,575
The next thing every DAG must have is a start date.

15
00:00:54,575 --> 00:00:57,109
In this case, we don't really care what

16
00:00:57,109 --> 00:00:59,689
our start date is because we're just doing a "Hello, World!",

17
00:00:59,689 --> 00:01:04,549
so I'm going to set the start_date to datetime.datetime.now,

18
00:01:04,549 --> 00:01:08,640
which is equivalent to whatever the time is right now in my time zone.

19
00:01:08,750 --> 00:01:11,680
Now that we've got that DAG defined,

20
00:01:11,680 --> 00:01:14,000
there is no actual work involved with this.

21
00:01:14,000 --> 00:01:15,484
It has no task to perform.

22
00:01:15,484 --> 00:01:17,299
If I go back to the UI,

23
00:01:17,299 --> 00:01:20,689
and I'm going to zoom in here as well so it's a little easier to see,

24
00:01:20,689 --> 00:01:26,144
and I go to "lesson1.demo1" and click on it and go to the Graph View, well, first,

25
00:01:26,144 --> 00:01:28,464
we can see here in our Tree View,

26
00:01:28,465 --> 00:01:32,060
we just have a DAG, there's no nodes involved.

27
00:01:32,060 --> 00:01:33,680
If I go to the Graph View,

28
00:01:33,680 --> 00:01:37,330
you can see airflow is confused because there are no tasks.

29
00:01:37,329 --> 00:01:40,250
So, we're going to go back and we're going to define a task.

30
00:01:40,250 --> 00:01:44,459
The first thing we're going to do is uncomment this code.

31
00:01:45,849 --> 00:01:49,834
You can see here that we have a task ID,

32
00:01:49,834 --> 00:01:52,829
python_callable and a DAG.

33
00:01:52,829 --> 00:01:56,120
These are the arguments to our operator.

34
00:01:56,120 --> 00:01:59,840
We're going to talk in detail about what operators are shortly,

35
00:01:59,840 --> 00:02:04,115
but for now, this is how you define a node in our graph.

36
00:02:04,114 --> 00:02:06,579
We're going to give this a task ID.

37
00:02:06,579 --> 00:02:10,050
I'm going to call this "greet_task",

38
00:02:10,050 --> 00:02:12,360
and we haven't defined a python_callable,

39
00:02:12,360 --> 00:02:14,115
so I'm going to leave this for now,

40
00:02:14,115 --> 00:02:19,250
and the DAG that this belongs to is the DAG that we defined above.

41
00:02:19,250 --> 00:02:28,039
So, this DAG on line 23 references the DAG that we instantiated on line 12.

42
00:02:28,039 --> 00:02:30,289
Now, we need to define a "Hello, World!"

43
00:02:30,289 --> 00:02:35,929
function. So, I'm going to define a "greet function."

44
00:02:35,930 --> 00:02:43,129
For this function, we're going to do "logging.info("Hello World!").

45
00:02:43,129 --> 00:02:46,099
If you feel more comfortable writing a print statement you could also do that,

46
00:02:46,099 --> 00:02:47,824
but if we use the logger,

47
00:02:47,824 --> 00:02:50,664
we actually get to see the output in the Airflow's logs.

48
00:02:50,664 --> 00:02:53,579
I'm going to go down to the python_callable,

49
00:02:53,580 --> 00:03:00,000
and I'm going to put in "greet", and I'm going to save.

50
00:03:00,000 --> 00:03:04,069
Now, Airflow should pick up our changes here automatically.

51
00:03:04,069 --> 00:03:08,479
It can take anywhere from 15 seconds to 30 seconds,

52
00:03:08,479 --> 00:03:10,849
sometimes up to a minute for Airflow to pick up your changes.

53
00:03:10,849 --> 00:03:14,644
So, if you save your file and it doesn't automatically show up in the Airflow UI,

54
00:03:14,645 --> 00:03:17,485
that's okay, give it a little bit of time.

55
00:03:17,485 --> 00:03:21,289
So, to get from this main screen to the code definition,

56
00:03:21,288 --> 00:03:23,389
I can hover over the code view,

57
00:03:23,389 --> 00:03:25,459
the lightning bolt icon here and click on that.

58
00:03:25,460 --> 00:03:27,695
The first thing I'm going to do is check.

59
00:03:27,694 --> 00:03:31,590
Does Airflow see the same thing that I see? It looks right.

60
00:03:31,590 --> 00:03:33,905
I can actually see the code that Airflow is loaded.

61
00:03:33,905 --> 00:03:35,330
So, on line 11 and 12,

62
00:03:35,330 --> 00:03:36,815
we have our "greet" function.

63
00:03:36,814 --> 00:03:38,823
On lines 23 to 27,

64
00:03:38,824 --> 00:03:40,115
we have our "greet_task",

65
00:03:40,115 --> 00:03:44,295
which we defined, and then we are good to run it.

66
00:03:44,294 --> 00:03:46,334
I'm going to go back to the main screen,

67
00:03:46,335 --> 00:03:49,295
and this is the first step you always have to take with Airflow.

68
00:03:49,294 --> 00:03:51,274
We need to toggle the DAG on.

69
00:03:51,275 --> 00:03:53,300
There's a little switch over here.

70
00:03:53,300 --> 00:03:59,265
Now the DAG is on. We need to actually now tell the Airflow to run the DAG.

71
00:03:59,264 --> 00:04:04,349
To do that, I'm going to click this "Trigger DAG" button over here, this "Play" button.

72
00:04:04,349 --> 00:04:06,150
It's going to prompt me and say,

73
00:04:06,150 --> 00:04:07,530
"Are you sure you want to do that?"

74
00:04:07,530 --> 00:04:10,840
I am. I'm going to go ahead and click "Okay."

75
00:04:10,840 --> 00:04:14,030
The first thing you're going to notice is that now we have

76
00:04:14,030 --> 00:04:16,910
the timestamp of the last run in this column here.

77
00:04:16,910 --> 00:04:19,745
So, this tells us the last time this DAG ran.

78
00:04:19,745 --> 00:04:23,930
We also have this light green orb in this DAG

79
00:04:23,930 --> 00:04:28,264
runs column and this tells us that the DAG is running but not yet complete.

80
00:04:28,264 --> 00:04:32,524
Over here, the recent task column is completely empty.

81
00:04:32,524 --> 00:04:36,689
I'm going to refresh the page now and you're going to see something slightly different.

82
00:04:44,720 --> 00:04:48,360
Let me check my logs here real quick.

83
00:04:48,360 --> 00:04:50,580
So, when something goes wrong with Airflow,

84
00:04:50,579 --> 00:04:53,564
the first thing we're going to want to do typically is check the logs.

85
00:04:53,564 --> 00:04:56,550
We just want to make sure everything is running.

86
00:04:58,790 --> 00:05:01,670
I'm going to try replacing this docker-compose file

87
00:05:01,670 --> 00:05:04,640
real quick and see if we can get that to work.

88
00:05:04,639 --> 00:05:08,509
Now it's down. Try that one more time.

89
00:05:08,509 --> 00:05:13,839
Try starting it back up and let's see if we can get it to run.

90
00:05:22,819 --> 00:05:26,985
While this starts up, what we should be seeing here,

91
00:05:26,985 --> 00:05:28,800
we have this green running orb,

92
00:05:28,800 --> 00:05:30,939
this will eventually move in in success column,

93
00:05:30,939 --> 00:05:32,404
where it'll be dark green.

94
00:05:32,404 --> 00:05:37,069
Over here, our tasks will have the same color scheme and we'll progress from.

95
00:05:37,069 --> 00:05:52,379
[inaudible]

96
00:05:52,379 --> 00:05:54,839
Okay. Because I restarted docker-compose,

97
00:05:54,839 --> 00:05:56,654
we're going to restart a refresh.

98
00:05:56,654 --> 00:05:59,849
Can you guys can see the screen okay?

99
00:05:59,850 --> 00:06:03,120
We can see if we [inaudible]

100
00:06:03,120 --> 00:06:06,764
Great. Okay. I'm going to turn the DAG on,

101
00:06:06,764 --> 00:06:12,509
and then we're going to go ahead and click the "Play" button.

102
00:06:13,100 --> 00:06:17,490
All right. This is exactly what we should see. It's not working.

103
00:06:17,490 --> 00:06:19,829
I apologize again about the technical difficulties,

104
00:06:19,829 --> 00:06:24,250
that's the rule of live demos that something must always go wrong.

105
00:06:24,250 --> 00:06:26,430
So I'm going to refresh,

106
00:06:26,430 --> 00:06:29,980
and you can see now that our task has moved in the success column.

107
00:06:29,980 --> 00:06:31,460
So, the "Hello, World!" task is run.

108
00:06:31,459 --> 00:06:33,379
We're going to look at the logs here in just a second,

109
00:06:33,379 --> 00:06:37,935
but before we go, we're going to look at this bright green orb here.

110
00:06:37,935 --> 00:06:41,000
The DAG is still in the running state and it just takes

111
00:06:41,000 --> 00:06:44,540
the scheduler just a moment to move the DAG in to the completed state.

112
00:06:44,540 --> 00:06:47,030
Now if we look here, we have this dark green success,

113
00:06:47,029 --> 00:06:50,944
and I can actually click on this task and it takes me to

114
00:06:50,944 --> 00:06:56,284
the execution of that task so that we're in a Task Instances page.

115
00:06:56,285 --> 00:07:00,085
Likewise, I can also click on this specific DAG run,

116
00:07:00,084 --> 00:07:04,644
and then I can see information about its particular run.

117
00:07:04,644 --> 00:07:08,049
But perhaps, the easiest way of all to get information about

118
00:07:08,050 --> 00:07:11,600
runs is to actually click on the DAG on the left here,

119
00:07:11,600 --> 00:07:13,845
which takes you into this Tree View.

120
00:07:13,845 --> 00:07:16,810
This shows you all the historical runs of our DAG.

121
00:07:16,810 --> 00:07:19,149
You can see here we have one task that's run,

122
00:07:19,149 --> 00:07:20,904
and I can click on this task,

123
00:07:20,904 --> 00:07:22,209
the "greet_task" that we define,

124
00:07:22,209 --> 00:07:24,069
so it should be a little bit familiar.

125
00:07:24,069 --> 00:07:30,149
Remember that here we defined a "greet_task" on line 23 to 27,

126
00:07:30,149 --> 00:07:34,269
and this name "greet_task" correlates to the name you'll see in the UI here.

127
00:07:34,269 --> 00:07:36,159
So, we have one task in our DAG.

128
00:07:36,160 --> 00:07:38,765
I can see the logs by clicking on this.

129
00:07:38,764 --> 00:07:41,694
Again, I clicked on the little green box here,

130
00:07:41,694 --> 00:07:44,194
and this screen has a lot of information on it.

131
00:07:44,194 --> 00:07:45,589
It can be really overwhelming.

132
00:07:45,589 --> 00:07:48,875
There are only a couple of things we're going to worry about in this class,

133
00:07:48,875 --> 00:07:50,029
and to be honest with you,

134
00:07:50,029 --> 00:07:53,734
the most important one from my perspective is this "View Log" button.

135
00:07:53,735 --> 00:07:56,629
This will actually show you what the task did and what it logged.

136
00:07:56,629 --> 00:08:00,529
We're going to click on that button and it's going to take you to this page,

137
00:08:00,529 --> 00:08:03,639
where it's going to show you all the logs associated with the run.

138
00:08:03,639 --> 00:08:06,259
Again, there's a lot of information here because Airflow is

139
00:08:06,259 --> 00:08:09,019
showing its logs in addition to whatever you logged as well.

140
00:08:09,019 --> 00:08:10,579
But if we look down here,

141
00:08:10,579 --> 00:08:13,609
you can see we've printed out "Hello, World!

142
00:08:13,610 --> 00:08:15,080
So, on this line,

143
00:08:15,079 --> 00:08:17,875
you can actually see us print out "Hello, World!"

144
00:08:17,875 --> 00:08:20,415
That's because here on line 12,

145
00:08:20,415 --> 00:08:22,590
we logged "Hello, World!"

