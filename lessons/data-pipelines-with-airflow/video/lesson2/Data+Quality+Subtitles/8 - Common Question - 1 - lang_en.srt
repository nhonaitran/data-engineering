1
00:00:00,000 --> 00:00:02,970
Why in creating a new DAG for every feature change

2
00:00:02,970 --> 00:00:07,185
become cumbersome as feature changes or bugs happen all the time?

3
00:00:07,185 --> 00:00:09,060
The answer to that question is yes,

4
00:00:09,060 --> 00:00:10,575
definitely it can be.

5
00:00:10,575 --> 00:00:13,095
The question is, and this is,

6
00:00:13,095 --> 00:00:16,710
it really just comes down to the kind of analysis you need to perform as a team.

7
00:00:16,710 --> 00:00:19,890
So, what is the change that I'm making?

8
00:00:19,890 --> 00:00:21,960
Is it a fundamental change to the DAG that

9
00:00:21,960 --> 00:00:24,405
actually changes the meaning of what we're trying to do?

10
00:00:24,405 --> 00:00:28,020
Or are we adding at something that can be easily

11
00:00:28,020 --> 00:00:32,055
reflected in the existing data pipeline that we've already designed?

12
00:00:32,055 --> 00:00:34,935
So, if we go back to Airflow,

13
00:00:34,935 --> 00:00:38,405
if we were to add say a marketing email send here,

14
00:00:38,405 --> 00:00:41,030
the problem with that is that if we didn't update

15
00:00:41,030 --> 00:00:44,690
our DAG or rerun the DAG to reflect that,

16
00:00:44,690 --> 00:00:49,070
then that can cause issues for other people who might come by later and

17
00:00:49,070 --> 00:00:51,530
think that for the last year

18
00:00:51,530 --> 00:00:54,290
that this DAG has been running or whatever the time period is,

19
00:00:54,290 --> 00:00:55,955
we sent all those emails.

20
00:00:55,955 --> 00:00:57,755
But in fact, we haven't, right?

21
00:00:57,755 --> 00:01:00,185
So, there are a couple of things you can do here.

22
00:01:00,185 --> 00:01:02,165
You could design a new DAG.

23
00:01:02,165 --> 00:01:05,600
Oftentimes that is the simpler solution.

24
00:01:05,600 --> 00:01:10,700
The other option which you could explore would be to go in here,

25
00:01:10,700 --> 00:01:12,565
go back to the DAGs page,

26
00:01:12,565 --> 00:01:15,155
and you can actually clear the history of DAG runs.

27
00:01:15,155 --> 00:01:16,960
So, one way to do that,

28
00:01:16,960 --> 00:01:19,345
if I wanted to rerun lesson two demo one,

29
00:01:19,345 --> 00:01:22,880
I could actually click in here and I can clear the history.

30
00:01:22,880 --> 00:01:24,800
So, let me repeat that.

31
00:01:24,800 --> 00:01:28,745
I went fast. So, on lesson two demo one,

32
00:01:28,745 --> 00:01:31,315
looking at the recent tasks.

33
00:01:31,315 --> 00:01:34,040
So, I'm going to click on the successful tasks.

34
00:01:34,040 --> 00:01:37,160
This takes me to the task instances page,

35
00:01:37,160 --> 00:01:42,315
which shows me all of the successful instances from lesson two demo one.

36
00:01:42,315 --> 00:01:44,365
You can add or remove filters here.

37
00:01:44,365 --> 00:01:45,905
In this particular case,

38
00:01:45,905 --> 00:01:47,915
I actually going to remove the filter.

39
00:01:47,915 --> 00:01:51,335
I just want all tasks related to lesson two demo one.

40
00:01:51,335 --> 00:01:53,735
So, I'm going to do something interesting here.

41
00:01:53,735 --> 00:01:57,440
I'm going to actually clear the history of these tasks.

42
00:01:57,440 --> 00:02:01,725
So, I'm going to click apply. Oops, excuse me.

43
00:02:01,725 --> 00:02:05,290
I'm going to hit, going to select all the tests on this page.

44
00:02:05,290 --> 00:02:07,300
I'm going to hit with selected.

45
00:02:07,300 --> 00:02:09,520
And then you see there's some options here.

46
00:02:09,520 --> 00:02:12,355
I can actually change the state of these DAGS.

47
00:02:12,355 --> 00:02:18,040
I'm going to clear them. So, Airflow is going to think that these tasks never run.

48
00:02:18,040 --> 00:02:22,060
Okay. So you can see the tasks are back now,

49
00:02:22,060 --> 00:02:23,395
but their state is none.

50
00:02:23,395 --> 00:02:25,540
So, Airflow is actually going to try to rerun

51
00:02:25,540 --> 00:02:28,945
these DAGs or rerun these tasks for this DAG.

52
00:02:28,945 --> 00:02:33,895
Now here's the really important part to keep in consideration when you do this.

53
00:02:33,895 --> 00:02:36,700
Airflow is going to rerun those tasks.

54
00:02:36,700 --> 00:02:41,185
It has no concept of the data stores that you have outside of Airflow.

55
00:02:41,185 --> 00:02:43,670
So, if rerunning a task is

56
00:02:43,670 --> 00:02:47,680
destructive or rerunning a task triggers some kind of downstream action,

57
00:02:47,680 --> 00:02:49,910
this can be really dangerous for

58
00:02:49,910 --> 00:02:53,240
your internal usage of Airflow and for other data consumers.

59
00:02:53,240 --> 00:02:58,155
So, it is possible to rerun a DAG or to clear the history of a DAG,

60
00:02:58,155 --> 00:03:00,620
but you as the data engineer need

61
00:03:00,620 --> 00:03:04,025
to intimately understand the repercussions of doing that.

62
00:03:04,025 --> 00:03:06,860
So, that's where I bring up the idea that you

63
00:03:06,860 --> 00:03:09,140
need to really weigh the benefits, the pros and cons,

64
00:03:09,140 --> 00:03:11,630
between do I need a new DAG altogether,

65
00:03:11,630 --> 00:03:13,820
where is design with this in mind?

66
00:03:13,820 --> 00:03:17,045
Or do I need to actually go back and wipe history and try again?

67
00:03:17,045 --> 00:03:19,530
So, I hope that answer helped.

