1
00:00:00,000 --> 00:00:02,820
As we all know, software can fail.

2
00:00:02,820 --> 00:00:05,535
We've worked hard in this course to learn best practices

3
00:00:05,535 --> 00:00:08,370
and construct resilient data pipelines in airflow.

4
00:00:08,370 --> 00:00:10,755
Even with all that effort, at some point,

5
00:00:10,755 --> 00:00:14,760
we'll encounter a bug and need to fix a problem in our production data pipelines.

6
00:00:14,760 --> 00:00:16,980
With proper monitoring, we can be aware of

7
00:00:16,980 --> 00:00:20,310
these issues as soon as they occur and act to fix them.

8
00:00:20,310 --> 00:00:23,595
In this section, we'll learn about airflows monitoring features,

9
00:00:23,595 --> 00:00:26,925
and how you can use them to stay ahead of pipeline problems.

10
00:00:26,925 --> 00:00:31,125
Airflow DAGs optionally specify an SLA or service level agreement.

11
00:00:31,125 --> 00:00:33,270
We mentioned this a couple times in the class.

12
00:00:33,270 --> 00:00:38,505
But it's also worth noting that this can be defined as a task parameter,

13
00:00:38,505 --> 00:00:41,460
time by which your task must complete.

14
00:00:41,460 --> 00:00:43,390
For time sensitive applications,

15
00:00:43,390 --> 00:00:46,880
these features are critical for developing trust amongst your pipeline customers,

16
00:00:46,880 --> 00:00:49,655
and ensuring that data is delivered while still meaningful.

17
00:00:49,655 --> 00:00:52,790
Slipping SLAs can also be early indicators of

18
00:00:52,790 --> 00:00:56,335
performance problems or need to scale the size of your airflow cluster.

19
00:00:56,335 --> 00:00:59,600
Here, I've taken a screenshot of the airflow UI.

20
00:00:59,600 --> 00:01:01,700
You can see that I clicked on Browse,

21
00:01:01,700 --> 00:01:05,180
and then I clicked on SLA misses to get us to this page.

22
00:01:05,180 --> 00:01:06,995
So, in this example,

23
00:01:06,995 --> 00:01:09,410
I set a couple of SLAs on lesson three,

24
00:01:09,410 --> 00:01:13,730
exercise one, just to demonstrate what a missed SLA looks like.

25
00:01:13,730 --> 00:01:20,750
So, if you're administrating an airflow data pipeline and you set an SLA on your tasks,

26
00:01:20,750 --> 00:01:23,270
and your test started to miss their SLAs,

27
00:01:23,270 --> 00:01:24,950
you can go to Browse,

28
00:01:24,950 --> 00:01:30,080
SLA misses and see which of the tasks of your DAGs are starting to miss their timelines.

29
00:01:30,080 --> 00:01:34,970
This is incredibly useful if you want to stay ahead of data getting out of date.

30
00:01:34,970 --> 00:01:40,145
Airflow can be configured to send emails on DAG and task state changes.

31
00:01:40,145 --> 00:01:46,790
These state changes may include successes, failures, or retries.

32
00:01:46,790 --> 00:01:50,750
Failure emails can allow you to easily trigger alerts.

33
00:01:50,750 --> 00:01:56,225
It's common for alerting systems like PagerDuty to accept emails as a source of alerts.

34
00:01:56,225 --> 00:01:58,730
If a mission critical data pipeline fails,

35
00:01:58,730 --> 00:02:00,255
one that your business relies on,

36
00:02:00,255 --> 00:02:04,280
you will need to know as soon as possible to get online and get it fixed.

37
00:02:04,280 --> 00:02:07,430
Airflow also comes out of the box with the ability to send

38
00:02:07,430 --> 00:02:11,315
system metrics using a metrics aggregator called Statsd.

39
00:02:11,315 --> 00:02:15,500
Statsd can be coupled with metrics visualization tools like Grafana,

40
00:02:15,500 --> 00:02:18,140
to provide you and your team high-level insights into

41
00:02:18,140 --> 00:02:21,545
the overall performance of your DAGs, jobs, and tasks.

42
00:02:21,545 --> 00:02:25,490
You can check the classroom notes to learn more about Statsd and Grafana,

43
00:02:25,490 --> 00:02:28,310
and how to get airflow to work with those two tools.

44
00:02:28,310 --> 00:02:31,340
You can watch these metrics over time to see if

45
00:02:31,340 --> 00:02:35,240
your airflow installation is growing slow or has gone offline.

46
00:02:35,240 --> 00:02:39,440
These systems can be integrated into your alerting system such as PagerDuty,

47
00:02:39,440 --> 00:02:42,245
so that you can ensure problems are dealt with immediately.

48
00:02:42,245 --> 00:02:46,370
Most importantly, airflow system level metrics allow you and your team to

49
00:02:46,370 --> 00:02:50,855
stay ahead of issues before they even occur by watching long-term trends.

50
00:02:50,855 --> 00:02:52,355
So, in this example,

51
00:02:52,355 --> 00:02:54,770
you can see the number of tasks successes for

52
00:02:54,770 --> 00:02:58,850
our entire airflow installation from a given period of time.

53
00:02:58,850 --> 00:03:02,510
So you can see the number of successes changing on the y-axis,

54
00:03:02,510 --> 00:03:06,155
and the time progressing on the x-axis.

55
00:03:06,155 --> 00:03:11,500
This visualization that you're seeing was taken as a screenshot out of Grafana,

56
00:03:11,500 --> 00:03:14,590
driven by the stats from Statsd.

